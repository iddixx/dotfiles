#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# nitrogen --restore & 

# xsetroot -solid '#5A8E3A'

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
# Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier
TERMINAL=kitty
BROWSER=zen-browser

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use $TERMINAL with xterm as fallback
hc keybind $Mod-b spawn "${BROWSER:-chromium}" # use $BROWSER with chromium as fallback
hc keybind Shift-Print spawn flameshot screen -c
hc keybind Print spawn flameshot gui -c
hc keybind $Mod-v spawn copyq toggle
hc keybind $Mod-d spawn dmenu_run -fn 'Iosevka Fixed SS14 SemiBold:pixelsize=23:antialias=true' -nb '#0B1722' -nf '#CECECE' -sb '#71ADE7' -sf '#0B1722' 
# keycodes: https://www.cl.cam.ac.uk/~mgk25/ucs/keysymdef.h
hc keybind $Mod-equal spawn pactl set-sink-volume @DEFAULT_SINK@ +5% 
hc keybind $Mod-minus spawn pactl set-sink-volume @DEFAULT_SINK@ -5% 

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-n     focus left
hc keybind $Mod-e     focus down
hc keybind $Mod-u     focus up
hc keybind $Mod-i     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-n     shift left
hc keybind $Mod-Shift-e     shift down
hc keybind $Mod-Shift-u     shift up
hc keybind $Mod-Shift-i     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-s split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-n       resize left +$resizestep
hc keybind $Mod-Control-e       resize down +$resizestep
hc keybind $Mod-Control-u       resize up +$resizestep
hc keybind $Mod-Control-i       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
hc substitute ALGO settings.default_frame_layout \
    foreach T tags.by-name. \
    sprintf ATTR '%c.tiling.root.algorithm' T \
    set_attr ATTR ALGO
hc set default_frame_layout grid

tag_names=( {1..9} )
tag_keys=( {1..9} 0 )


hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
#!/usr/bin/env bash

quote() {
	local q="$(printf '%q ' "$@")"
	printf '%s' "${q% }"
}

if [[ -f /usr/lib/bash/sleep ]]; then
    # load and enable 'sleep' builtin (does not support unit suffixes: h, m, s!)
#!/usr/bin/env bash

quote() {
	local q="$(printf '%q ' "$@")"
	printf '%s' "${q% }"
}

if [[ -f /usr/lib/bash/sleep ]]; then
    # load and enable 'sleep' builtin (does not support unit suffixes: h, m, s!)
    # requires pkg 'bash-builtins' on debian; included in 'bash' on arch.
    enable -f /usr/lib/bash/sleep sleep
fi

hc_quoted="$(quote "${herbstclient_command[@]:-herbstclient}")"
hc() { "${herbstclient_command[@]:-herbstclient}" "$@" ;}
monitor=${1:-0}
geometry=( $(hc monitor_rect "$monitor") )
if [ -z "$geometry" ] ;then
    echo "Invalid monitor $monitor"
    exit 1
fi
# geometry has the format W H X Y
x=${geometry[0]}
y=${geometry[1]}
panel_width=${geometry[2]}
panel_height=32 # bar panel i changed it here
# font="-*-fixed-medium-*-*-*-18-*-*-*-*-*-*-*"
    # requires pkg 'bash-builtins' on debian; included in 'bash' on arch.
    enable -f /usr/lib/bash/sleep sleep
fi

hc_quoted="$(quote "${herbstclient_command[@]:-herbstclient}")"
hc() { "${herbstclient_command[@]:-herbstclient}" "$@" ;}
monitor=${1:-0}
geometry=( $(hc monitor_rect "$monitor") )
if [ -z "$geometry" ] ;then
    echo "Invalid monitor $monitor"
    exit 1
fi
# geometry has the format W H X Y
x=${geometry[0]}
y=${geometry[1]}
panel_width=${geometry[2]}
panel_height32
# font="-*-fixed-medium-*-*-*-18-*-*-*-*-*-*-*"
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
# hc keybind $Mod-Shift-space                                                           \
#             or , and . compare tags.focus.curframe_wcount = 2                   \
#                      . cycle_layout +1 vertical horizontal max vertical grid    \
#                , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-j jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#E0C590' # that's a frme border color
hc set frame_border_normal_color '#0B1722'
hc set frame_bg_normal_color '#CC8BC9'
hc set frame_bg_active_color '#E0C590'
hc set frame_border_width 5
hc set show_frame_decorations 'if_multiple'
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 0
hc set window_gap 0 # set gaps here

hc attr theme.title_height 15
hc attr theme.title_when never
hc attr theme.title_font 'Iosevka SS14 Fixed:pixelsize=12' 
# hc attr theme.title_font '-*-fixed-medium-r-*-*-13-*-*-*-*-*-*-*'
hc attr theme.title_depth 3  # space below the title's baseline
hc attr theme.active.color '#71ade7' # panel color(and focused color, sometimes)
hc attr theme.title_color '#ffffff'
hc attr theme.normal.color '#323232dd'
hc attr theme.urgent.color '#7811A1dd'
hc attr theme.tab_color '#1F1F1Fdd'
hc attr theme.active.tab_color '#2B4F0Add'
hc attr theme.active.tab_outer_color '#6C8257dd'
hc attr theme.active.tab_title_color '#ababab'
hc attr theme.normal.title_color '#898989'
hc attr theme.inner_width 0
hc attr theme.inner_color '#71ade7'
hc attr theme.outer_width 0
hc attr theme.outer_color '#71ade7'
hc attr theme.border_width 5
hc attr theme.floating.border_width 5
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color '#0B1722'
hc attr theme.active.inner_color '#71ade7'
hc attr theme.floating.active.color '#71ade7'
hc attr theme.tiling.active.color '#71ade7'
hc attr theme.urgent.inner_color '#0B1722'
hc attr theme.normal.inner_color '#0B1722'
# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done
hc attr theme.tiling.outer_width 0
hc attr theme.background_color '#0B1722'

hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0
hc set focus_follows_mouse 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on floatplacement=center
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class='unityhub' floating=on floatplacement=center
hc rule class='pavucontrol' floating=on floatplacement=center
hc rule class='copyq' focus=on floating=on
hc rule title='Discord Updater' floating=on floatplacement=center
hc rule title='Settings' floating=on floatplacement=center
# class is executable name
# title is title of the window
hc rule fixedsize floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done
redshift -x
redshift -O 4500
nitrogen --set-auto $HOME/dotfiles/bgs/rem_bg.png & # hardcoded
flameshot &
copyq &
setxkbmap us,ru -variant colemak_dh_ortho,diktor -option grp:win_space_toggle -option caps:capslock

